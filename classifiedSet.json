{"0":["[Replace this first paragraph with a short description of your new category. This guidance will appear in the category selection area, so try to keep it below 200 characters. Until you edit this text or create topics, this category won't appear on the categories page.]  Use the following paragraphs for a longer description, as well as to establish any category guidelines or rules.  Some things to consider in any discussion replies below:   What is this category for? Why should people select this category for their topic? How is this different than the other categories we already have? Do we need this category? Should we merge this with another category, or split it into more categories?",["logistics"]],"1":["Trying to set up my reduce for mapQuest, and it's not working how I'm expecting it to. I know I'd need to do something with my new array to get rid of  new opposite directions  but I thought the code below should  at least remoce the redundancies in the first array. From my thinking: reduce is looking at the current value and the previous values, and only if they are not opposites does it add it to the total array. However, I'm getting error messages like the one attached, there is some incrementer thing going on. Would appreciate any guidance!function mapQuest(directions) {  function isOpposite(currentValue, previousValue) {     let valueArray = [previousValue, currentValue]     return valueArray.includes('N' &amp;&amp; 'S') || valueArray.includes('E' &amp;&amp; 'W') }  return directions.reduce(function(total, currentValue, previousValue){             ///if the previous value and the current value are not opposites, only              ///then do we want to add them to the array              if (isOpposite(currentValue, previousValue)) {return total}             else {             total.push(previousValue)             total.push(currentValue)                 return total             }  }, [])  }  Error message: Expected [ 0, 'N', 1, 'N', 2, 'E', 6, 'E', 8, 'N', 9, 'N', 12, 'E' ] to equal [ 'N', 'N', 'W', 'S', 'E' ].",["array"]],"2":["I'm looking through the documentation regarding the use of .apply(). After reading MDN, I still have some confusion about the appropriate use of null as an argument.The solution code for complement function that reads:  function complement(func) {  return function ( ) {       return !func.apply(null, arguments) }  }",["function"]],"3":["struggled with multiple maps for a long time. After looking at the solution, one of the things that was tripping me up was that I was first looping through the array of objects, then doing my for of loop. The solution below has you go right into the for of loop on the second array after you map over the first array. Can someone walk me through what's going on here? It seems to me that they wouldn't be ale to look at the individual objects in the array without first isolating those objects. Basically, it seems to me like we're doing a for of loop over an array, and it shouldn't be able to get at the values we need yet.   Solution:   function multipleMaps(input, maps) {    return input.map(function(key){        for (let map of maps) {            if(key in map) {                return map[key]            }        }        return key    })}",["array"]],"4":["A quick question about best practices moving forward with es6 syntax - especially when we start creating apps and sites.  Let's say we are making an app and we have 3 functions. The functions call to each other and cascade downwards:  function getRandomUser() {addData()}  function addData(){updateDOM()}  function updateDOM(){  }  In this case we get data on the user, send the user data to the addData function to store it, and then transmit data to appear on the DOM via the updateDOM function.  However, using es6 syntax it would flow in the opposite direction because we can't call function expressions before they are defined as they are not hoisted.  const updateDOM = () =&gt; {  }  const addUser = () =&gt; {updateDOM()}  const getRandomUser = () =&gt; {addData()}  Is this a matter of preference? Is there certain use cases for one over the other? Is it generally best practice to use functions expressions over declarations?   If anyone has any input I'd be curious to hear!",["function"]],"5":["Hey guys, I have been running testem and receiving failures with testem saying my answers are returning undefined, however when I open the console the correct answers to each question are loaded. This continues to happen even when I refresh the page. Just wondering if anyone has experienced this and if I should be worried that there is something wrong with my code execution, or if this is just a jasmine/testem site error?",["testem"]],"6":["I'm a little confused about the meaning of the first sentence here.  \"When you invoke or call a function, the function creates its own. The execution context is a record of information of code executing such as where it's called (where the code is on the call stack), how the function was invoked, its Scope Chain, the value of this, and more!\"  Is it suggesting that it's creating it's own execution context? Or does \"creates its own\" refer to something else that I'm not understanding.",["function"]],"7":["In Foundations Part 3 re 'this', there was a code example that returned an expression. From what MDN says, the return statement ends function execution and specifies a value to be returned to the function caller. How is this method/function able to return an expression (this.power = 'on') instead of a value? Thanks!    Code belowconst tvRemote = {    on: function() {        return this.power = \"on\";    },    off: function() {        return this.power = \"off\";    },    power: \"off\"};  tvRemote.on.call({power:\"off\", size:\"60-inch\"});",["function"]],"8":["Quite study room needed  I am an upcoming student for the Fullstack immersive software engineering program. My cohort starts at Jan 13. I wonder if I can use the campus as a study room after Junior Phrase ends before Senior Phase starts, or even after Senior Phase ends while I am job searching. I need a quite place to study but unfortunately there is construction going on outside my apartment.   Also if there is any recommendations of quite study place I would appreciate it a whole lot. I am willing to pay for the place.",["meetup"]],"9":["Sorry if someone's already brought this up, but just in case anyone was having trouble with the TestFirst review specs—specifically failing the .forEach() call-through spec on the 'fiilter' problem—I think there's a mistake on line 37 of the test specs: it's checking that the .forEach() method was called, but then calls the 'filter' method on an array instead of the 'fiilter' method, so the spec will fail even if you've written your code correctly. Just thought I'd point this out so that no one else puzzles over the spec for too long like I did.",["test spec"]],"10":["Screen Shot 2019-12-19 at 2.00.27 PM.png1073x231 38.1 KB   Can anyone explain to me which this would return undefined?I understand the basics of hoisting like how declarations are hoisted but not the assignments and how function declarations are hoisted in its entirety. But I don't know exactly how to break apart this code with all the weird parentheses.",["function"]],"11":["I need help understanding the difference between calling toString.call(val) vs val.toString():   toString.call(null) -- I get [object Null]null.toString();-- I get error \"Uncaught TypeError: Cannot read property 'toString' of null\"  toString.call([12,3])-- I get [object Array]-- I get \"12,3\"",["function"]],"12":["Hi,  here is my code for symmetricDiff:  const symmetricDiff = (a, b) =&gt; [...difference(a, b), ...difference(b, a)];  It passes all specs except \"calls the difference function\"... even though it appears that the code does call difference( )  Can someone explain this?    here is the entire code, including my difference func:  const difference = (a, b) =&gt; a.filter(e =&gt; !b.includes(e));  const symmetricDiff = (a, b) =&gt; [...difference(a, b), ...difference(b, a)];",["function"]],"13":["Hi all! Just wondering... has anyone received their grade for the first checkpoint yet? It still says pending under my profile and there are no comments on my code in git. Thanks!",["grades"]],"14":["Hi everyone, I'm trying to submit my first checkpoint work in my github using  $git add -A$git commit -m 'completed exercises'$git push origin master  but it's not working   can anyone help me how I can solve this so i can push them into my repository?   thanks in advance!",["git"]],"15":["image.png1713x1798 67.4 KB   I am stuck on this page because I forgot to use the flag -m and add a message. I tried typing a message anywhere it allowed the cursor to move but don't know how to save that message. I get no response with Control + C, Q, or Control + D. How can I return to the regular command line page without killing iterm?",["git"]],"16":["Hello Everyone in FSA-2001 (January 2020 Immersive),    Who is on Codewars?     Going along with previous FSA cohort convention, I found it appropriate to initiate a Codewars clan for the Jan 2020 Immersive. The clan name is FSA-2001. To join simply go to your Codewars Account Settings and enter 'FSA-2001' in the 'Clan (Company, School or Organization)' field and click UPDATE at the bottom.    I look forward to meeting everyone!",["collaboration"]],"17":["For the checkpoint coding challenge, I can use \"git commit -m \"complete\"\" and then \"git push origin master\" to push my code to my remote repository. Does my remote repository have to be \"Public\" in order to be graded?  Screen Shot 2019-12-06 at 1.53.02 PM.png930x640 38.6 KB",["git"]],"18":["Trying to see the results of console.log() inside VS Code without moving over to Chrome Dev. I keep having to reload Chrome and locate the correct source file. The \"Output \" tab in VS Code is blank even when I should have logged output. The only extensions I can find seem to only have advanced output properties: I really just want to be able to see Hello World from console.log('Hello World\") somewhere.  Any tips?",["vs code"]],"19":["Where can I find course dates? I am wondering if we will have any days off at Thanksgiving?",["logistics"]],"20":["Is anyone else getting a message when they login to learn dot telling them to integrate Slack?  I am and when I try to integrate Slack it tells me I don't have permission to do that.  *insert shrugging shoulders emoji here*",["logistics"]],"21":["When I ttied to link my learn dot account to Slack I received the following notification: \"You’re not authorized to install Learndot on Fullstack Academy.Learndot is restricted for this workspace. Please reach out to one of your App Managers if you’d like additional information or to ask them to install this app.\"",["logistics"]],"22":["Has anyone else gotten info on the immersive yet? It's supposed to start Monday and I have yet to hear anything from Fullstack.",["logistics"]],"23":["Hi guys. Does anyone know if we will still have access to the materials after Thursday?",["logistics"]],"24":["I just noticed that my quiz was never graded -- is this an error?",["grades"]],"25":["Hi everyone, I think I missed the link to the TestFirst Review V2 solutions. Where can I find them?  Thanks!Kate",["test spec"]],"26":["Hi so I personally use Safari as my default browser so I typically open up the testem environment in Safari and use the JS console there since it auto opens from VS Code. I was wondering if there is a difference between the two, all I have found on the web about this is differences in rendering engines (WebKit vs Chrome V8). Thanks in advance!",["testem"]],"27":["Hi!  I was just wondering when we would get our grades/feedback on our first checkpoint.  Thank you!  Gundeep Kohli",["grades"]],"28":["For this evening's help desk (6/4), will there be someone taking questions?  As always, really appreciate all the mentors' help during these sessions.",["logistics"]],"29":["When should we anticipate our grades for Checkpoint1?  Also, will solution videos be provided?",["grades"]],"30":["Post Questions relating to System Errors or Productivity Tips!",["collaboration"]],"31":["I'm baffled because I've had no trouble creating local repositories at all until now! I though I added successfully the first time, but when I ran ls on my folder the directory wasn't there.   I tried adding it again, but then got 'error: failed to push some refs to 'https://github.com/clairemuscat/TestFirst-Review-V2.git'. But when I tried adding one more time, I got the error \"fatal: remote origin already exists.\"  Does anyone have an idea of where this repository is? It says it exists but I can't find it on my machine and it looks like it had trouble pushing in the first place.   Thanks!",["git"]],"32":["Hi all,  I'm having trouble with test'em in my browser. It has worked as expected through the first two checkpoints and workshops, but last night it stopped loading. It looks like this: Screen Shot 2020-02-11 at 11.54.13 AM.png3580x2032 148 KB   The page won't allow me to open the console either. As of now I can't run any tests, so help would be greatly appreciated.  Thanks!",["testem"]],"33":["Hi all! I am trying to run npm test after installing npm in the Rope-Dude file, however, I am getting error. Before the error message the link of the testem links to the TestFirst-Part-2 testem page not to the Rope-Dude problem.  I'm not sure what's wrong cause there was no problem when I installed and tested TestFirst Part 1 and 2. Can anyone help me figure out this?   스크린샷 2020-02-05 오후 3.34.32.png1476x1226 81.3 KB",["npm"]],"34":["Getting error messages when trying to clone checkpoint 1 into my terminal and am getting the following error message:  Cloning into 'foundations-checkpoint-pt-1'...Username for 'https://github.com': mhammer708mhammer708@github.com':remote: Invalid username or password.fatal: Authentication failed for 'https://github.com/mhammer708/foundations-checkpoint-pt-1/'mhammer708@LAPTOP-HOJH2J0K:~/Desktop$      I tried resetting my password, but I am still getting this error. Any suggestions would be appreciated!",["git"]],"35":["Dear mentors,   Is having ESLint set up on our machine required in order to complete the final checkpoint? I still haven't set it up on my machine yet and am hesitant to try to set it up before I take the final checkpoint in case it causes any unexpected machine set up issues for me. My current setup works fine. If ESLint is not required at this stage, I'll set it up after I take the final checkpoint.  Thanks,Mallory",["eslint"]],"36":["Screen Shot 2019-06-24 at 2.51.12 PM.png2880x1800 1.36 MB   Hi, I tried using the curl command to install n. I get past the Xcode installation popup and it tells me that I already have the binaries installed...  I also included my echo $PATH below the error. Scott's videos don't show what to do here (even his video regarding correcting my $PATH variable, but he accesses a file called .bash_profile, of which I do not have).  Help!  EDIT: I fixed it. Turns out that the Overview lesson had instructed me to install npm, yet in this particular lesson Scott had not had npm installed, and so npm and n were able to be installed together via the curl command. I HIGHLY RECOMMEND NOT INSTALLING NPM UNTIL YOU ARE GOING TO USE THE CURL LINK!  Thanks,Rob",["npm"]],"37":["Hi! Sorry if this question doesn't make sense    On 'Foundation Part 1' &gt; '3. Machine Setup' &gt; 'Check if Your Machine is Ready'   I received an EACCES Error in my terminal. I followed the youtube video in the description: https://www.youtube.com/watch?time_continue=278&amp;v=bxvybxYFq2o  I was able to follow everything up until 4:37. When the video at 4:37 mentions to refresh the variables how do I go about doing that? My terminal has been stuck on the following image below:    Thank you!",["terminal"]],"38":["Hi,I wasn't able to download testem globally so I used npm install and npm test for TestFirst.I wanted to practice forking, cloning and npm test with the bootcamp-prep repository before the checkpoint, but now I am receiving the following error when trying npm install: Screen Shot 2019-10-07 at 2.51.54 PM.png1318x438 61 KB   If someone can please help because I need to take the checkpoint soon Thank you in advance!!",["npm"]],"39":["Hi team! This is probably pretty late to be posting about this but I'm honestly very confused about whether my Testem is working or whether I am just riding that steep coding learning curve.   So the problem is that Testem does respond to some questions and give me those lovely green circles, but with other questions I won't be able to get something really basic to come up green, even after I've written and run the program and seen that the outcome looks (to me) like what I think the question is asking for it to be.   I'll use the example of the first problem in 06-functios-and-closure:   The first test spec is:    image.png1082x168 24.4 KB   Whatever else may be wrong with it I'm confused why my code (see below:     ) isn't passing the first spec and is instead receiving the following error from Testem:   image.png1550x522 117 KB   Am I making a super basic mistake and not seeing it?   To me it seems like what I have would pass at least that part of the test.   Any help would be appreciated!",["testem"]],"40":["Hi all, I have an oddly specific issue with my PATH variable. I discovered that the n command (while installing node and npm) isn't in my PATH and that my username doesn't appear in the path either. Instead, I have \"ImageMagick\"? I thought that maybe I could change it with my bash_profile but that didn't work. I'm worried that this will cause problems in the future. If anyone knows how I can fix this, I would greatly appreciate your help! Thanks!   My PATH Variable:  Screen Shot 2019-09-28 at 7.19.31 PM.png1632x178 52.6 KB   My Bash Profile:  Screen Shot 2019-09-28 at 7.27.21 PM.png1274x824 47.1 KB",["terminal"]],"41":["Hi,  So I believe I installed the latest version of ESLint (I believe) and got the error messages that some people on here were talking about:  Screen Shot 2019-08-14 at 10.00.30 AM.png1454x726 111 KB   I tried troubleshooting it by downloading 5.0.1, and turning VS off and on again. I continued to try to make a eslintrc.json file Screen Shot 2019-08-14 at 10.01.44 AM.png886x132 21.7 KB  but not sure if the file was even created, or just hidden somewhere. Frankly, not sure if I might have an error in the downloading of esLint or making the eslintrc.json file",["eslint"]],"42":["Hello, I was trying to pushing an existing repository on my computer to my GitHub account, but I got error says \"Could not read from remote repository\". And my local repository was cleaned up somehow after I continued connecting. I attached the codes from my terminal below. Please help me find out what went wrong and how I can make it right. Thank you.",["git"]],"43":["I have Git installed. I can do most of the commands in the Exploring Git section, but I can't open text in VS Code (also installed). It says -bash code: command not found. I get the same error when I try to commit the file.",["terminal"]],"44":["Hello! When downloading ESLint, I received the following warnings. I proceeded with the instructions, but was wondering if I needed to do anything about these errors. Thanks!    image.png2006x354 62.5 KB Screen Shot 2019-06-25 at 2.34.42 PM",["eslint"]],"45":["Hey everyone!  The latest version of eslint breaks the eslint-config-fullstack plugin. I submitted an issue on Github documenting the problem.   If any of you are running into issues configuring your linter, you can temporarily work around this problem by running the following commands:  npm uninstall -g eslint (only necessary if you've installed the latest version of eslint already.)  npm install -g eslint@5.0.1 eslint-config-fullstack eslint-plugin-react babel-eslint  Everything should then work correctly.    On a different note, does anyone in Chicago want to meet up and study together for this week's checkpoint? My phone number is 847-513-1894. Feel free to text me; I'd love to work together!",["eslint"]],"46":["Hi there!  I'm working through NPM's instructions on how to set up testem after receiving an EACCESS error, but am receiving the following error message when attempting to change permissions. How do I get past this?   Screen Shot 2019-06-25 at 6.42.15 PM.png1268x78 34 KB",["npm"]],"47":["Installed testem using:   $ npm install testem -g  However I couldn't get it to work. I noticed the install loc was /usr/local/Cellar/node/12.4.0/bin/testem. This seems like an unusual place to install testem. To fix the problem, I created a link in the /usr/local/bin/ folder:  $ ln -s /usr/local/Cellar/node/12.4.0/bin/testem testem  This seems to have fixed the issue with launching testem.   1) Is this an acceptable way to fix the problem?  2) Looking at the video under 3. Machine Setup: Node &amp; NPM, I see:  Screen Shot 2019-06-25 at 01.05.27.jpg1706x146 60.3 KB    Why is the \"global\" installation folder under /Users/development-environment-setup/? How is $ testem executing in the first place, since ~/n/bin/ is not a part of the path? How is the system finding testem?",["npm"]],"48":["I currently have Linux Ubuntu 18.04 installed on my laptop.  I am trying to install Node and NPM using the terminal.    Based on documentation from Digital Ocean (https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-18-04) I tried:   sudo apt install nodejs  But it is giving me unmet dependencies error.  Please see screen shot below:    node_npm_error.png1037x396 86.4 KB   I tried :   apt --fix-broken install   And I get the following error saying permission was denied:    root_question.png840x54 12.7 KB   Has anyone run into this problem?  Any suggestions for me would be greatly appreciated, thx.",["npm"]],"49":["I have node and npm installed on my laptop.  However, my machine doesn't seem to allow me to install packages globally.  So when I type 'testem' in my terminal, I receive an error message \"testem: command not found\".  My workaround is to type \"npm test\" into terminal, and it gives the same output screen as \"testem\" would.  \"npm test\" runs all of the specs in TestFirst1.  This makes me hesitant to mess with my settings to install \"testem\" since \"npm test\" works just fine.  Should I just leave my computer as is since it's working even without \"testem\"?",["npm"]],"50":["Screen Shot 2019-05-06 at 8.00.45 PM.png1190x1099 130 KB Hi Everyone!  I ran into these errors when trying to install, and I have no idea what to do.  Any help would be really appreciated!",["error"]],"51":["Hi all,  I'm having some trouble using the 'code' command to launch a file in VS Code from the terminal. I successfully installed the code command in PATH, but when I type \"code\" + file in the command line, I get an error that says:   Fatal Python error: Py_Initialize: unable to load the file system codecModuleNotFoundError: No module named 'encodings'  Current thread 0x0000000115bdc5c0 (most recent call first):/usr/local/bin/code: line 10: ./MacOS/Electron: No such file or directory  Can anyone help me out with this? Thank you!  Best,Daniel",["vs code"]],"52":["the testem page in google chrome is showing this problem called shortand object syntax:   image.png1344x500 73.8 KB   I don't understand how this is even possible because I don't see any tests related to this in the object-properties-specs.js file.   I am sure that I have gone to the correct folder and have run testem on the exact folders that I have opened up in VS code. I even tried making an object \"dog\" and it did not update the testem page.",["testem"]],"53":["Hello, jasmine is not running properly on my device. it is showing green dots and cross mark only rather then showing a spec details? where should i make my changes? please see my attachment as follows. Thanks. Screen Shot 2019-02-02 at 2.43.54 PM.png3358x1962 692 KB",["test spec"]],"54":["Following the \"ESLint\" section of the \"3. Machine Setup\" section of the Foundations - Part 1 workshop, I ran:  sudo npm install -g eslint eslint-config-fullstack eslint-plugin-react babel-eslint  The command resulted in the output:   npm WARN deprecated circular-json@0.3.3: CircularJSON is in maintenance only, flatted is its successor./usr/local/bin/eslint -&gt; /usr/local/lib/node_modules/eslint/bin/eslint.js/usr/local/lib├── UNMET PEER DEPENDENCY babel-eslint@10.0.1├── eslint@5.12.1 ├── eslint-config-fullstack@6.0.0 └── eslint-plugin-react@7.12.4  npm WARN eslint-config-fullstack@6.0.0 requires a peer of babel-eslint@^8.2.6 but none was installed.   Not really a showstopping issue since I've been able to get ESLint to work locally in a project in the past, but I am wondering if anyone else is encountering the same warning and what the warning implies.  For the record, I am using Ubuntu 18.04 LTS and have not tried the command on any other machines yet.",["eslint"]],"55":["For the \"3. Machine Setup\" section of the Foundations - Part 1 workshop, is there a reason when it doesn't recommend just using sudo every time one needs to install an npm package globally? Is it only for the convenience of not having to type sudo?  In particular, modifying the ownership of /usr/local/ and its contents seems like a big security risk.  The other suggestion of changing the directory in which global npm packages are installed to a user-specific directory is reasonable in my opinion, but I don't see how using sudo when installing global packages isn't a better idea most of the time.",["terminal"]],"56":["Hi all I was trying to install ESLint through my terminal. I followed the instruction here: https://eslint.org/docs/user-guide/getting-started and tried to install ESLint locally. But when I ran the commands in terminal, these warnings showed up:  Screen Shot 2018-12-13 at 2.18.11 PM.png1526x736 126 KB Did anyone else get these warnings? Do I need to do anything about them?",["eslint"]],"57":["Hi, All,I'm having a usability issue with one of the properties set in my ESLint configuration. When the complexity gets too high, but is not yet an error, ESLint puts a squiggly yellow line under my code. I find it interferes with tracking all the indents. In which configuration file is the complexity property set, and how do I disable it?  Thanks!",["eslint"]],"58":["Screen Shot 2018-12-08 at 2.54.21 PM.png698x133 18.4 KB   I have read through a lot of the other discussion topics regarding this and am unable to get testem to work properly. I have node installed.   Originally I couldn't get testem to even install because of an EACCES error but I followed another post by Mahia_Mutushy to get it installed but it will not run. I have attempted to use PATH=$PATH: but it will not run properly",["testem"]],"59":["Hello! 'which testem' in vscode outputs /usr/local/bin/testem while 'which testem' in iterm outputs /Users/halimchu/.nvm/versions/node/v11.3.0/bin/testem  How can I put them in the same location?",["testem"]],"60":["Post Questions relating to the 08_Recursion Test Specs in Fullstack Test First",["test spec"]],"61":["Solution I used to fib: const priorFibbed=[1, 1];function fib(num){    if(priorFibbed[num]) return priorFibbed[num];    priorFibbed[num]=fib(num-1)+fib(num-2);    return priorFibbed[num];}This passes all tests except 'calls itself recursively', which claims fib is only called once for n=5.  Is there a clear reason that would be the case?",["recursion"]],"62":["I'm attempting to solve the CodePen problem at the bottom of the Intro to Recursion lesson called evenAndOdd. Below is my solution. It seems like whenever I push a number to my result array, the result array doesn't remember it. I cannot figure out why. Could someone help me understand why my solution isn't working?  My Solution  function evenAndOdd (arr) {   let result = [[],[]]   if (arr.length &lt;= 0) {     return result;    } else {     if (arr[0] % 2 === 0) {       result[0].push(arr[0]);     } else {       result[1].push(arr[0]);     }     return evenAndOdd(arr.slice(1));   } };",["recursion"]],"63":["Hi all,  I thought I understood how to find the base case in recursive problems but I still have a question. I thought the question to ask when finding it is, \"how will I know when I'm done?\", and that this usually means coming to the end of the collection. For example, if you have the string 'hello world' and you are making a function called vowelCount, your base case is when you have no string length left (you've iterated through it all). And this seems to be a pattern in recursion problems -- that the base case is an empty string or array or the number zero.  However, let's say you're trying to flatten a bunch of nested arrays using recursion. Is the base case when you've got an empty array (ie, you've come to the end of the array, having flattened everything you could), or is it when you've got a fully flattened array (ie, no element is an array itself?).  Here is a working solution:   function flatten(arr) {   var result = []   arr.forEach(function(element) {     if (!Array.isArray(element)) {       result.push(element)     } else {       result = result.concat(flatten(element))     }   })   return result } flatten([1, [2], [3, [[4]]]]);  It seems like here the base case is when the element is no longer an array. But why is this? Why isn't it an empty array, meaning you've iterated through everything, which would be in keeping with the pattern I've seen is most other recursion problems I've done?  And finally, will every recursion solution include an explicit base case as a rule? Or would the base case sometimes be written at the end in a different way?  Thanks!",["recursion"]],"64":["In tonight's help desk anyone want to join together for a review of recursion?  I had difficulty with the checkpoint 2 recursion question and am still stuck on the correct answer...",["recursion"]],"65":["Hi all,  Has anyone else had an issue with numbers concatenating like they’re strings (though ‘typeof' confirms they really are numbers)? The code below results in '54321' instead of 15 for example.  This is happening in my recursive call. Suggestions on stackoverflow.com include using using parseInt(), or Number(), etc. to force the issue I guess, but to no avail. Obviously I’m overlooking something or breaking a rule that would be useful to know.  Here’s my code and thanks for any insights  function sumTheDigits(array) {   if (array.length === 0) return '';   const sum = array.slice(array.length - 1);   return sum + sumTheDigits(array.slice(0, array.length - 1)); }",["type"]],"66":["Here's my solution:  function type(input) {    const toString = Object.prototype.toString;    let answer = toString.call(input).substring(8)    return answer.substring(0, answer.length - 1)}  How did you solve this one?",["function"]],"67":["Am trying to visualize how each function call evaluates, for example when you pass it fib(7)  function fib(num){    if (num === 0 || num === 1) {        return 1    } else {        return fib(num-1) + fib (num-2)    }}  This is my visualization of it:   Indicies     0  1  2  3  4  5  6   7Sequence 0  1  2  3  5  8 13 21  So when we call fib(7), what does the call stack look like and how does it evaluate?We are looking for the value of fibonacci in the index position we pass to the function - so the 7th index should start at 21?   So then what is num's value after each call?   (fib num-1) + fib (num -2) === fib (7-1) + fib (7-2) === ???  Id really appreciate a visualization of how these call evaluate so I can get a clearer mental model of how recursion works.   Please let me know and thanks!  Alex.",["function"]],"68":["I try to refactor my answer to the shortestfunction evenAndOdd(arr, ans = [[],[]]) {    if(arr[0] === undefined) return    arr[arr.length-1]%2 === 0 ?     ans[0].push(arr.pop()) :    ans[1].push(arr.pop());    evenAndOdd(arr, ans);    return ans;}",["recursion"]],"69":["How is the below solution returning a number when 'aeiouAEIOU'.includes(sentence[0]) returns a boolean value?   spoiler  function countTheVowels(sentence) {           if (!sentence.length) {             return 0;           }           return 'aeiouAEIOU'.includes(sentence[0]) + countTheVowels(sentence.slice(1));         }",["function"]],"70":["Hi all!  Trying to understand a slight different in my code (left) vs. the solutions code (right), specficially the highlighted portions.   What is the o =&gt; stringify(o) doing in the solutions code? My code passes all the specs as is, so I'm wondering what I may be unintentionally missing!  Thanks!",["function"]],"71":["I am very confused with the functionality of everything in Object.prototype.toString.call  I mainly don't understand how we can use it on a string or a number which are not objects?   Any help or links to resources much appreciated!",["type"]],"72":["Here is my attempt below but I keep getting a SyntaxError: Unexpected token message about operationFunc in the pop compute method. Also, I posted this in 08-Recursion since there isn't a classes topic on here.   class RPNCalculator {   constructor(stack = []) {     this.stack = stack;   }   push(num) {     this.stack.push(num);   }   popCompute = function (operationFunc) {     if (this.stack.length &lt; 2) {       throw 'rpnCalculatorInstance is empty'     } else {       const num1 = this.stack.pop();       const num2 = this.stack.pop();       this.push(operatorFunc(num1, num2))     }   }   plus() {     this.popCompute((first, second) =&gt; first + second);   }   value() {     return this.stack[this.stack.length - 1];   }   minus() {     this.popCompute((first, second) =&gt; second - first);   }   times() {     this.popCompute((first, second) =&gt; first * second);   }   divide() {     this.popComputer((first, second) =&gt; second / first);   }  };  rpnCalculatorInstance = new RPNCalculator();  rpnCalculatorInstance.push(1); rpnCalculatorInstance.push(3); rpnCalculatorInstance.plus();",["recursion"]],"73":["for the stringify solution here:   const stringify = obj =&gt; {    if (type(obj) === 'String'){        return \"${obj}\";    }    if (type(obj) === 'Array'){        const result = obj.map(o =&gt; stringify(o));        return [${result.join(',')}];    }  if (type(obj) === 'Object'){     let result = [];     Object.keys(obj).forEach(key =&gt; {         let val = stringify(obj[key]);         result.push(`\"${key}\":${val}`)     });     return `{${result.join(',')}}`; } return obj + '';  }  Can someone walk me through the logic of what this last line of code is doing:  return obj + '';  Removing it breaks a lot of things, but I can't pinpoint why.  Thanks!",["recursion"]],"74":["Hello all. I am having trouble with the stringify function. Possibly the type function as well, I'm not sure if it works well or just manages to pass the specs. The type function is here:  function type (variableInput) {     let temp = Object.prototype.toString.call(variableInput);     let stringResult = '';     temp = JSON.stringify(temp);     for (let i = 9; i &lt; temp.length - 2; i++) {         stringResult = stringResult.concat(temp[i]);     }     return stringResult; }  And here is my stringify function:  function stringify (input) {     if(type(input) === 'String'){         return '\"' + input + '\"';     } else if (type(input) !== 'Array' || type(input) !== 'Object'){         return String(input);     } else if (type(input) === 'Array'){         let arrayTemp = []         let stringTemp = '';       for (let i = 0; i &lt; input.length ; i++) {           // arrayTemp.push(stringify(input[i]));           // stringTemp.concat(stringify(input[i]));       }       return stringify(arrayTemp);     }  }  I am lost at attempting handling an array. The expected output for[1, 'a', [true, 'b', [null], 'c'], 3]is'[1,\"a\",[true,\"b\",[null],\"c\"],3]'I am struggling with how to go through this. A few problems I am addressing:   Including [] brackets in the result. Removing spaces. Converting 's to \"s. Solving this recursively, because I keep finding myself leaning towards a for loop. On that note, solving it at all would be a start.   So far, I am expecting '1,something,' to equal '[1,\"something\",[]]'",["function"]],"75":["Hi all -- winding down and not sure why my recursion version of the factorial prompt isn't working. It doesn't pass either specs, which are 1)handles the base case and 2) correctly compuets factorial. I would think that if (num === 1) is my base case and that the factorial is defined by return num * factorialIterative(num -1).  Tested out different console logs from before and tested this on repl and pythontutor and they are all returning a correct factorial, say if I were to put in 5.  //recursive function factorialIterative(num){     // base case num = 0, just return 1      if (num ===1 ){         //return factorialIterative();         return 1;         console.log(\"done\")     } else {       //5*4*3*2*1       //(num) * (num-1) * (num-1-1)* (num-1-1-1)*(num-1-1-1-1)       //so num has to go down every time by one        //and multiplied by each other        // num is holding this       return num * factorialIterative(num -1) //pythontutor shows that it's actually executing the factorialIterative(num-1) half of line 29 first -- then, when it goes back to pop off the call stack, THEN it does the num * to the num-1s that were accounted for       console.log(num-1)      }  } factorialIterative(num);  If anyone could give me a hint in the right direction, that would be much appreciated! Thanks!",["recursion"]],"76":["Hi all! This is more of a question about syntax than purely about recursion.  In the recursion problem, we are given this example  function repeat(str, num) {   if(!num) {     return \"\";   }   else {     return str + repeat(str, num-1)   } } //repeat('hello', 3) =&gt; 'hellohellohello'  the function's purpose is pretty straightforward, especially when you look at the last line that's commented.  The explanation right underneath it then states, \"The base case is when num === 0,\" which makes sense but why is it expressed as: if(!num)? I would have interpreted that as \"not a number\", and it seems like my google search backs that up as well. Is it synonymous with num===0 in recursion, or something?   thanks!",["recursion"]],"77":["I'm experimenting with trying to write recursive functions, in several ways, to get better at it... however, I'm stumped here. I have two versions of a recursive function to flatten arrays.  The first one (which works) is:    function deepFlatten(array) {  const flattened = [];   if (array.length === 0) {    return flattened;  }    array.forEach(elem =&gt; {    if (!Array.isArray(elem)) {      flattened.push(elem)    } else {      flattened.push(...deepFlatten(elem));    }  })  return flattened;}   While the second one (which does not work) is:   function deepFlatten(array) {  const flattened = [];   if (array.length === 0) {    return flattened;  }    array.forEach(elem =&gt; {    if (!Array.isArray(elem)) {      flattened.push(elem)    } else {      flattened.concat(deepFlatten(elem));    }  })  return flattened;}   My question is.. why? In both cases, deepFlatten will always return an array. So why does the .concat() call not actually do that, despite the function call of deepFlatten(elem) returning a function? Am I missing something really obvious?",["recursion"]],"78":["Hiya,  My Test'em is failing when I stringify(fnc). The error is \"Expected 'function() {}' to equal 'function () {}'.\"  By the looks of it the initial fnc variable is initialised as:  var fnc = function() {},  But the stringify(fnc) results expects:  expect(stringify(fnc)).toEqual('function () {}');  Am I missing something with my solution or is there some extra whitespace in the spec? My function part of stringify():  stringify(){ if (['Boolean', 'Number', 'Function'].includes(type(input))) {     return input.toString();   } }  Cheers",["function"]],"79":["Using recursion (other than easy problems) is pretty unintuitive for me, so I have to dumb it down to some guidelines when approaching these kind of problems. Anybody see anything wrong with what I have or have anything to add?   Create base case Return line must contain:2.a. a value that accumulates with each recursive call2.b.  recursive calling function while also modifying the argument passed so that it approaches the base case",["recursion"]],"80":["I had some trouble with stringify. After watching the solution videos I understand how the solution works and how to tackle the problem. I am a bit confused why my code doesn't work though. Basically I used a for loop instead of forEach. I would think it would work similarly, but for some reason it gives me an infinite loop.   Code below:   if(type(input)===\"Object\"){         var returnArr=[]         var keys=Object.keys(input)         for(i=0;i&lt;keys.length;i++){             key=keys[i]             value=input[key]             returnArr.push('\"'+key+'\": '+stringify(value))         }         return \"{\"+returnArr.join(',')+\"}\"      }",["recursion"]],"81":["Hi,  This is a pretty minor/peripheral-to-the-course's-real-content problem, but I have an issue with the test specs for 08-Recursion. When I run the test specs in Firefox, one of the stringify tests returns 'function() {}' instead of 'function () {}' and fails the test. But when I run them in Chrome or use the Chrome console, I get the correct results with the exact same code!  I've looked at the answer key, and their solution passes all the test specs on both browsers. Does anyone know what could be up with this?  I'm hesitant to just paste in my code in case anyone reads this by accident and spoils themselves with a (technically) working solution, but if anyone thinks it'd be helpful for understanding what's going on, I'd be happy to.",["test spec"]],"82":["I don't know why, but even after watching all the videos and reading the extra resources, I was still really struggling to use recursion for more than the most basic loops.  I did some googling and found this Codecademy tutorial that breaks it down reeeeeally slowly:           www.codecademy.com             Recursion in JavaScript  Recursion is when you make a call to a function within the definition of that function. It is an essential and powerful programming tool, and also one of the more difficult concepts to understand.                           It definitely helped.  Just thought I'd share, in case anyone else out there needs the \"Recursion for Dummies\" version.",["recursion"]],"83":["Hey everyone,  When using the Stringify function on arrays, I'm wondering why the official solution works (hidden in case someone doesn't want any spoilers): Summary  function stringify(obj) {     if(type(obj) === 'String') {         return '\"' + obj + '\"';     }     if(type(obj) === 'Array') {         var result = obj.map(function(o){             return stringify(o);         });            return '[' + result.join(',') + ']';     }    But this solution does not work:   function stringify(input) {   if (type(input) === 'String') {     return '\"' + input + '\"';   }   else if (type(input) === 'Array'){     for (var i = 0; i &lt; input.length; i++) {       stringify(input[i]);     }     return '[' + input.join(',') + ']';   }  As far as I can tell, the only difference is that the official solution creates a new array, whereas the one shown below tries to modify the existing array. Note: I haven't solved the object portion of the Stringify function, which is why I'm not including it in these code snippets.",["recursion"]],"84":["In the \"type\" exercise of TestFirst 08-Recursion, I figured out from the comments that I was supposed to use Object.prototype.toString.call(x), with 'x' being whatever input I was trying to determine the type of.  When you do this it spits out \"object\" + the type of your input.  However, for the life of me I cannot figure out why TF that works.  What is going on there?!?!  Thanks",["recursion"]],"85":["Hi All -   I am working on the 08 Recursion part of TestFirst P2, and I just built the type utility function (note: it's not recursive, just in that section).   I got the answer, but I don't really understand why .call effects the code in the way it does.   My question: where var bool = true, why does  console.log(Object.prototype.toString(bool))  return the value --&gt;  [object Object]  But   console.log(Object.prototype.toString.call(bool))  return the value --&gt;  [object Boolean]  It would be especially helpful if someone could point me to where in the .call documentation it alludes to this functionality! I stumbled across the solution through trial and error but am curious how I could have learned of this functionality via the  documentation for call   Thanks!",["recursion"]],"86":["Hey, I've been thinking about this Fibonacci question too much recently, and something seems a bit off. It passed all the specs, but why the base case works if you set the base case to be if n&lt;=1:  function fib(n) { \tif (n &lt;= 1) { \t\treturn 1; \t} else { \t\treturn fib(n-1) + fib(n-2); \t} }  for example, for fib(2),  2 is not &lt;= 1, so it would go to the else statement and return fib(1) + fib(0). and in this case, fib(1) would return 1, but shouldn't fib(0) also return 1? if thats the case, 1+1 is 2, so your output should be 2, but in the end its 1...?",["recursion"]],"87":["Having trouble making this code work for the type array.  Advice?  function stringify(input){     if(type(input) === 'String'){        return '\"' + input + '\"';    } else if (type(input) !== 'Array' || type(input) !== 'Object'){        return String(input);    } else if (type(input) === 'Array'){        return stringify(input[0]) + stringify(input.slice(1));    } }",["type"]],"88":["So I've been going through this problem to try and better grasp the Objects part of stringify and in this process decided to switch out the .forEach function for another .map function (like is used for the Array portion). When I did this, it still appeared to work, so I'm just curious about these two methods and when is best to use them - is one preferable over the other in this case? It seems like the main difference is that map returns a new array, while forEach works on the original?   if (type(obj) === \"Object\") { \tvar result = []; \tObject.keys(obj).forEach(function(key){ \t\tvar val = stringify(obj[key]); \t\t\tresult.push('\"' + key + '\": ' + val);  \t}); \treturn \"{\" + result.join(\",\") + \"}\";",["object"]],"89":["I saw someone from Oct 16 mention a video solution for this test file, but I couldn't one.  Is there one available?  Thanks!",["logistics"]],"90":["Post Questions relating to the 06_Functional Test Specs in Fullstack Test First",["test spec"]],"91":["Hey there! So I need some help breaking down and understanding solution code. So my initial approach was to create something like this:  const extensionSearch = (searchValue, files) =&gt; {      let retVal;      let filterCallback = function(whatGoesHere) {          return whatGoesHere.includes(searchValue);      };      retVal = files.filter(filterCallback);      return retVal;  };  While I believe (I haven't gone back and tested it) that solution would pass now that I changed it a little,  I was failing the last two specs for a long time until I eventually went to the MDN documentation for filter, I followed one of the examples to create this function:  const extensionSearch = (searchValue, files) =&gt; {      return files.filter(function(files) {          return files.includes(searchValue)      })  }  This is the code I used to solve the problem.   But I'm not sure exactly why. I was hoping someone can break down the solution and explain it a little bit. I'm really confused on:  **what the parameter files is supposed to be. I was failing a spec, so I just put in the parameter files, and I started passing. ** the syntax of the second solution.  I also realized I need to review callback functions, and higher order functions to fully understand my solution code. Is there anything else I should look at to understand it better?What was your approach to solving this problem?",["function"]],"92":["Would someone mind taking a look at my swapcase code??? I'm getting \"capitalize is not defined\" and \"elem is not defined\".  getting a little stuck, would appreciate any help!  function swapCase(aString) {    let stringArray= aString.split(' ')    function capitalize(elem) {        if (anArray.indexOf(elem) % 2 === 0) {        return elem=elem.toUpperCase() }        }    return stringArray.map(capitalize(elem))}",["function"]],"93":["Hey all, my reduce function is not passing any of the specs, I keep getting the error \"callback is not a function\". It looks pretty similar to other code I've seen people say works for them, would love any help on what I'm doing wrong.   function reduce(collection, callback, startValue) {let returnValue=startValuefor (let i = 0; i &lt;collection.length; i ++) {    let currentElement = collection[i]    returnvalue =callback(currentElement, returnValue)}return returnValue}",["function"]],"94":["I'm getting stuck on this test specGetting an error message  Screen Shot 2020-02-09 at 1.18.42 PM.png1400x508 105 KB   and here are my codes:according to the error message i feel it's how i use toLowerCase on submitGuess()but i'm not sure how to fix it. Can anyone help? Thank you   class RopeDude{  constructor(str){    this.secretWord = str.split('');    this.gameState = 'playing';    this.lettersGuessed = [];    this.remainingGuesses = 6;  }    submitGuess(letter){    let guess = letter;        guess = guess.toLowerCase();    if(this.gameState === 'playing'){      if(!this.lettersGuessed.includes(guess)){        this.lettersGuessed.push(guess);      }    if(!this.secretWord.includes(guess)){     this.remainingGuesses --;   } }    }    computeGameState(){  if(this.secretWord.every(elem =&gt; this.lettersGuessed.includes(elem) || elem === ' ')){   this.gameState = 'won'; }else if(this.remainingGuesses === 0){   this.gameState = \"lost\"; }else {   this.gameState = 'playing'; }    }    getSecretWordPuzzle(){   let getSecretWordPuzzle = this.secretWord.map(elem =&gt;{     if(this.lettersGuessed.includes(elem) || elem === ' '){       return elem;     }else{       return '#';     }   });   return getSecretWordPuzzle.join('');  }    getGameStateMessage(){    if(this.gameState === 'playing'){      return There is a total of ${        this.remainingGuesses      } guesses remaining:\\n${        this.remainingGuesses === 6         ? ASCIIART[ASCIIART.length -1]        : ASCIIART[this.remainingGuesses]      };    }else if(this.gameState === 'lost'){      return Game Over, the word was \"${this.secretWord.join('')      }\":\\n${        ASCIIART[0]      };    }else{      return 'Winner Winner Chicken Dinner, you won!';    }  }}  const simulateRopeDude = (str) =&gt; {  const letters = () =&gt;    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".split('');  const game = new RopeDude(str);    function playRopeDude(){    let letter = letters[Math.floor(Math.random() * 52)];    if(game.gameState === 'playing'){      game.submitGuess(letter);      game.computeGameState();      return playRopeDude();    }else{      return game.getGameStateMessage();    }  }    return playRopeDude();}",["function"]],"95":["How do I invoke a function more than once when it's assigned to a constant?  Example code:let count = 0;const name = () =&gt; count++;const log = name();console.log(count);//1  I believe the name function is invoked once in this example. Is there a way to invoke it again (i.e. such that count = 2) using const log (i.e. avoid invoking name function by using name())? Thanks!",["function"]],"96":["SPOILER ALERT ----&gt; Contains solution for the includes() method!    After completing the exercises in which we recreate array methods, I reviewed the official solutions on GitHub. And I saw that, in crafting the includes() method, for...in was used to iterate the collections argument.  const includes = (collection, searchVal) =&gt; {   for (key in collection) {     if (collection.hasOwnProperty(key)) {       if (collection[key] === searchVal) {         return true;       }     }   }   return false; };  It's my understanding that for...in is not well suited to iterating arrays, yet this includes() method must take both Arrays and Objects. So why this choice? Is it that the arbitrary iteration behavior of for...in doesn't matter in this case? Obviously, the function works.  In my own solution, I checked first if collection was an array, and if so, used Object.assign() to turn it into a standard Object before using the same for...in loop pattern. Was that an unnecessary extra step?  Thanks for your insights on this!",["function"]],"97":["medium.com             Why ['1', '7', '11'].map(parseInt) returns [1, NaN,...  Javascript is weird.                           This article does a great job explaining some of the strange things that can happen as a result of .map()'s optional arguments.",["documentation"]],"98":["I'm pretty sure the answer is no...b/c of the arguments I have for the callback function (I used the starting value as one of the arguments.. please see below). Interestingly, my code did pass all the test specs for the reduce function.. It looks different from the solution which contains the .forEach() method-- something I tried to avoid since I still don't have a strong grasp of this particular method (oops).  function reduce(arr,startVal,callback) {    let returnedVal = 0;    for (let i=0; i&lt;arr.length; i++){        returnedVal += callback(startVal,arr[i]);    }    return returnedVal}  Thank you in advance!",["function"]],"99":["I clicked on the solution link and I don't see it there. Do I just need glasses or is it somewhere else?",["logistics"]],"100":["Screen Shot 2019-12-15 at 2.49.41 PM.png969x277 19.5 KB  Screen Shot 2019-12-15 at 2.49.50 PM.png951x277 20.1 KB   Not sure what's wrong here! Nor how to figure it out!",["error"]],"101":["Hello everyone,  I can't seem to figure out why this code is wrong. I know that \"\\n\" should start a new line, but it doesn't look like spacing is the issue (judging from the expected ___ to be __). Any help is appreciated!   Screen Shot 2019-12-15 at 9.36.16 PM.png1074x590 62.6 KB  Screen Shot 2019-12-15 at 9.38.44 PM.png1840x548 32.1 KB",["error"]],"102":["I'm trying to use the Array.every() method and need some help about what's going on / why it isn't working the way I thought it would.  The Rope-Dude assignment specs define a computeGameState() function which is supposed to determine whether all the letters in the secret word have been guessed by the player, at which point setting the gameState property to true.   To determine this, I figured I would loop through every element (character) in the secretWord array, and check if this letter is included within the lettersGuessed array.   if(this.secretWord.every((letter) =&gt; {       console.log('letter is ' + letter);       this.lettersGuessed.includes(letter);     })){       this.gameState = 'won';     }  When this code runs on a game where secretWord = ['t', 'r', 'e', 'e'] and lettersGuessed = ['t', 'x', 'r', 'e'], I've determined that the loop runs once matching the 't' from secretWord[0] to its existence in lettersGuessed, returning true for that instance, but then does not run again. At least, I don't have another round of console.log(). And the total functionality (for the complete run of every(), not just its first iteration) actually returns false. I don't know where this value is coming from, or why it exits out of the loop when 't' returned true.  Below is the same idea implemented with a for loop, and this code works.   const wonState = () =&gt; {       for(let index in this.secretWord){         if(!(this.lettersGuessed.includes(this.secretWord[index]))){           return false;         }       }       return true;     }     if(wonState){       this.gameState = 'won';     }",["array"]],"103":["The solution for the .every() method is as follows:  const every = (array, checkerFunc) =&gt; {   const everyIterator = (currentVal, nextVal) =&gt;     currentVal &amp;&amp; checkerFunc(nextVal);   return reduce(array, true, everyIterator); };  My own solution omitted that everyIterator function, and instead just returned the value returned by reduce(array, true, checkerFunc). Going through my code, I see the third parameter in the reduce() method is a function which takes in 2 parameters, but in the case of the test specs our functions getValue() and isEven() only take in a single parameter. I understand there is an issue here, and I understand that the everyIterator function is checking to see \"whether the values up to this point are true and also the current value is true\", but I still can't fully wrap my head around the step-by-step process of this solution, versus my own.   Thanks!",["array"]]}